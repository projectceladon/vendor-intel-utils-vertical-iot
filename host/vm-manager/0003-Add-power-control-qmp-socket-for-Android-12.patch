From 956c012d77bce6619ba03b7186c05bed188c0a3a Mon Sep 17 00:00:00 2001
From: "Suresh, Prashanth" <prashanth.suresh@intel.com>
Date: Tue, 8 Nov 2022 12:03:39 +0530
Subject: [PATCH] Add power control qmp socket for Android 12

Add qmp socket for CiV guest VM that required by suspend/hibernate power control feature.

Signed-off-by: Suresh, Prashanth <prashanth.suresh@intel.com>
---
 src/guest/start.c | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/src/guest/start.c b/src/guest/start.c
index 85b488f..844fc2c 100644
--- a/src/guest/start.c
+++ b/src/guest/start.c
@@ -63,6 +63,8 @@ static int get_uid() {
 #define PT_LEN 16
 static char *pci_pt_record[PT_MAX] = { 0 };
 static int pci_count = 0;
+static int MAX_NUM_GUEST = 7;
+static char qmp_pwr_socket[MAX_PATH] = { 0 };
 
 static int create_vgpu(GKeyFile *gkf)
 {
@@ -646,6 +648,7 @@ static void cleanup(int num, int removed_sof_tgl_snd_module)
 	cleanup_child_proc();
 	cleanup_rpmb();
 	cleanup_passthrough();
+	cleanup_pwr_ctrl();
 	if(removed_sof_tgl_snd_module)
 		insert_sof_tgl_snd_module();
 	//cleanup_hugepages();
@@ -932,6 +935,31 @@ static void strip_duplicate(gchar *val, const gchar *inner_cmd)
 		g_free(to_split);
 }
 
+void set_pwr_ctrl(char * qmp_cmd) {
+	for(int avail = 0; avail < MAX_NUM_GUEST; avail++) {
+		char *num;
+		asprintf(&num, "%d", avail);
+		strcat(strcpy(qmp_pwr_socket, "/tmp/qmp-pwr-socket-"), num);
+		if(access(qmp_pwr_socket, F_OK) != 0) {
+			snprintf(qmp_cmd, MAX_CMDLINE_LEN, " -qmp unix:%s,%s", qmp_pwr_socket, "server,nowait");
+			break;
+		}
+	}
+	if (strcmp(qmp_cmd, "") == 0) {
+		printf("E: No power control socket available");
+		exit -1;
+	}
+
+	return qmp_cmd;
+}
+
+void cleanup_pwr_ctrl() {
+	//cleanup qmp power control socket on exit
+	if(access(qmp_pwr_socket, F_OK) == 0) {
+		remove(qmp_pwr_socket);
+	}
+}
+
 int start_guest(char *name)
 {
 	int ret = 0;
@@ -982,6 +1010,11 @@ int start_guest(char *name)
 	cx = snprintf(p, size, " -qmp unix:%s/.%s"CIV_GUEST_QMP_SUFFIX",server,nowait", civ_config_path, qname);
 	p += cx; size -= cx;
 
+	char qmp_sock[MAX_CMDLINE_LEN] = { 0 };
+	set_pwr_ctrl(qmp_sock);
+	cx = snprintf(p, size, qmp_sock);
+	p += cx; size -= cx;
+
 	val = g_key_file_get_string(gkf, g->name, g->key[GLOB_VSOCK_CID], NULL);
 	if (val) {
 		cx = snprintf(p, size, " -device vhost-vsock-pci,id=vhost-vsock-pci0,guest-cid=%s,bus=pcie.0,addr=0x4", val);
-- 
2.38.1

