From 0007f56f4c43e253f35846c7e5cb08017b5bb592 Mon Sep 17 00:00:00 2001
From: Amber Jain <amber.jain@intel.com>
Date: Tue, 24 May 2022 04:36:37 +0000
Subject: [PATCH] Handle DRM_IOCTL_I915_GEM_MMAP_GTT failure for VF

DRM_IOCTL_I915_GEM_MMAP_GTT for VF will fail as the apperture is not
available for VF. Handling the failure case by calling the
DRM_IOCTL_I915_GEM_MMAP as a fallback.

Fixes CTS failures with DRM_IOCTL_I915_GEM_MMAP_GTT failure signature.

Tracked-On: OAM-102338
Signed-off-by: Amber Jain <amber.jain@intel.com>

diff --git a/i915.c b/i915.c
index 435406f..51b6b49 100644
--- a/i915.c
+++ b/i915.c
@@ -524,11 +524,37 @@ static void *i915_bo_map(struct bo *bo, struct vma *vma, size_t plane, uint32_t
 
 		ret = drmIoctl(bo->drv->fd, DRM_IOCTL_I915_GEM_MMAP_GTT, &gem_map);
 		if (ret) {
-			drv_log("DRM_IOCTL_I915_GEM_MMAP_GTT failed\n");
-			return MAP_FAILED;
-		}
-
-		addr = mmap(0, bo->meta.total_size, drv_get_prot(map_flags), MAP_SHARED,
+			drv_log("DRM_IOCTL_I915_GEM_MMAP_GTT failed retrying DRM_IOCTL_I915_GEM_MMAP\n");
+
+			struct drm_i915_gem_mmap gem_map;
+			memset(&gem_map, 0, sizeof(gem_map));
+
+			/* TODO(b/118799155): We don't seem to have a good way to
+			* detect the use cases for which WC mapping is really needed.
+			* The current heuristic seems overly coarse and may be slowing
+			* down some other use cases unnecessarily.
+			*
+			* For now, care must be taken not to use WC mappings for
+			* Renderscript and camera use cases, as they're
+			* performance-sensitive. */
+			if ((bo->meta.use_flags & BO_USE_SCANOUT) &&
+			    !(bo->meta.use_flags &
+			      (BO_USE_RENDERSCRIPT | BO_USE_CAMERA_READ | BO_USE_CAMERA_WRITE)))
+				gem_map.flags = I915_MMAP_WC;
+
+			gem_map.handle = bo->handles[0].u32;
+			gem_map.offset = 0;
+			gem_map.size = bo->meta.total_size;
+
+			ret = drmIoctl(bo->drv->fd, DRM_IOCTL_I915_GEM_MMAP, &gem_map);
+			if (ret) {
+				drv_log("DRM_IOCTL_I915_GEM_MMAP failed\n");
+				return MAP_FAILED;
+			}
+
+			addr = (void *)(uintptr_t)gem_map.addr_ptr;
+		} else
+			addr = mmap(0, bo->meta.total_size, drv_get_prot(map_flags), MAP_SHARED,
 			    bo->drv->fd, gem_map.offset);
 	}
 
-- 
2.36.1

